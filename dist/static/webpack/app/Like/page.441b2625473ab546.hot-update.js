"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/Like/page",{

/***/ "(app-pages-browser)/./app/servises/cats-api-client.ts":
/*!*****************************************!*\
  !*** ./app/servises/cats-api-client.ts ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkIfInFavoritesApi: function() { return /* binding */ checkIfInFavoritesApi; },\n/* harmony export */   deleteFavorite: function() { return /* binding */ deleteFavorite; },\n/* harmony export */   gatImageCat: function() { return /* binding */ gatImageCat; },\n/* harmony export */   getBreeds: function() { return /* binding */ getBreeds; },\n/* harmony export */   getBreedsInfo: function() { return /* binding */ getBreedsInfo; },\n/* harmony export */   getFavorites: function() { return /* binding */ getFavorites; },\n/* harmony export */   getImages: function() { return /* binding */ getImages; },\n/* harmony export */   getInfoBreedGallery: function() { return /* binding */ getInfoBreedGallery; },\n/* harmony export */   getVoted: function() { return /* binding */ getVoted; },\n/* harmony export */   saveFavorites: function() { return /* binding */ saveFavorites; },\n/* harmony export */   submitVote: function() { return /* binding */ submitVote; },\n/* harmony export */   uploadImage: function() { return /* binding */ uploadImage; }\n/* harmony export */ });\nlet myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\nmyHeaders.append(\"x-api-key\", \"live_wiK6XvXiiaaWkigPGBlpfIWQm8GcUQoZ231HgSqBokFzek6teWQFhAKHurcR0agm\");\nlet myHeaders2 = new Headers();\nmyHeaders2.append(\"x-api-key\", \"live_wiK6XvXiiaaWkigPGBlpfIWQm8GcUQoZ231HgSqBokFzek6teWQFhAKHurcR0agm\");\nlet requestOptions = {\n    method: \"GET\",\n    headers: myHeaders,\n    redirect: \"follow\"\n};\nconst getBreeds = (imageCount, uploadDataSort)=>{\n    const apiUrl = \"https://api.thecatapi.com/v1/breeds?limit=\".concat(imageCount, \"&order=\").concat(uploadDataSort);\n    return fetch(apiUrl, requestOptions).then((response)=>response.json()).catch((error)=>console.log(\"error\", error));\n};\nconst getImages = (props)=>{\n    const { breedFilter, imageCount, uploadDataSort, typeImage } = props;\n    const apiUrl = \"https://api.thecatapi.com/v1/images/search?breed_ids=\".concat(breedFilter, \"&limit=\").concat(imageCount, \"&order=\").concat(uploadDataSort, \"&mime_types=\").concat(typeImage);\n    return fetch(apiUrl, requestOptions).then((response)=>response.json()).catch((error)=>console.log(\"error\", error));\n};\nconst getBreedsInfo = (breedId)=>{\n    const apiUrl = \"https://api.thecatapi.com/v1/breeds/\".concat(breedId);\n    return fetch(apiUrl, requestOptions).then((response)=>response.json()).catch((error)=>console.log(\"error\", error));\n};\nconst getInfoBreedGallery = (queryParams)=>{\n    const { breedName } = queryParams;\n    const apiUrl = \"https://api.thecatapi.com/v1/images/search?limit=10&breed_ids=\".concat(breedName);\n    return fetch(apiUrl, requestOptions).then((response)=>response.json()).catch((error)=>console.log(\"error\", error));\n};\nconst gatImageCat = ()=>{\n    const apiUrl = \"https://api.thecatapi.com/v1/images/search\";\n    return fetch(apiUrl, requestOptions).then((response)=>response.json()).catch((error)=>console.log(\"error\", error));\n};\nconst submitVote = (imageID, value)=>{\n    const apiUrl = \"https://api.thecatapi.com/v1/votes\";\n    const requestOptionsPost = {\n        method: \"POST\",\n        headers: myHeaders,\n        redirect: \"follow\",\n        body: JSON.stringify({\n            image_id: imageID,\n            sub_id: \"optional_unique_user_id\",\n            value: value\n        })\n    };\n    return fetch(apiUrl, requestOptionsPost).then((response)=>response.json()).catch((error)=>console.log(\"error\", error));\n};\nconst getVoted = ()=>{\n    const apiUrl = \"https://api.thecatapi.com/v1/votes\";\n    return fetch(apiUrl, requestOptions).then((response)=>response.json()).catch((error)=>console.log(\"error\", error));\n};\nconst saveFavorites = (imageID)=>{\n    const apiUrl = \"https://api.thecatapi.com/v1/favourites\";\n    const requestOptionsPost = {\n        method: \"POST\",\n        headers: myHeaders,\n        redirect: \"follow\",\n        body: JSON.stringify({\n            image_id: imageID,\n            sub_id: \"user-007\"\n        })\n    };\n    return fetch(apiUrl, requestOptionsPost).then((response)=>response.json()).catch((error)=>console.log(\"error\", error));\n};\nconst getFavorites = ()=>{\n    const apiUrl = \"https://api.thecatapi.com/v1/favourites\";\n    return fetch(apiUrl, requestOptions).then((response)=>response.json()).catch((error)=>console.log(\"error\", error));\n};\nconst checkIfInFavoritesApi = (imageId)=>{\n    const apiUrl = \"https://api.thecatapi.com/v1/favourites/\".concat(imageId);\n    return fetch(apiUrl, requestOptions).then((response)=>response.json()).then((data)=>data.length > 0).catch((error)=>{\n        console.log(\"error\", error);\n        return false;\n    });\n};\nconst deleteFavorite = (favoriteID)=>{\n    const apiUrl = \"https://api.thecatapi.com/v1/favourites/\".concat(favoriteID);\n    const requestOptionsPost = {\n        method: \"DELETE\",\n        headers: myHeaders\n    };\n    return fetch(apiUrl, requestOptionsPost).then((response)=>response.json()).catch((error)=>console.log(\"error\", error));\n};\nconst uploadImage = async (selectedFile)=>{\n    const apiUrl = \"https://api.thecatapi.com/v1/images/upload\";\n    let data = new FormData();\n    data.append(\"file\", selectedFile);\n    data.append(\"sub_id\", \"my_id_007\");\n    data.append(\"breed_id\", \"test\");\n    const requestOptionsPost = {\n        method: \"POST\",\n        headers: myHeaders2,\n        redirect: \"follow\",\n        body: data\n    };\n    return await fetch(apiUrl, requestOptionsPost);\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/servises/cats-api-client.ts\n"));

/***/ })

});